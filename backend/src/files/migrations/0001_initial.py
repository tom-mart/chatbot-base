# Generated by Django 5.2.6 on 2025-10-08 20:50

import django.db.models.deletion
import files.models
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='StorageQuota',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('total_quota', models.BigIntegerField(default=1073741824, help_text='Total storage quota in bytes')),
                ('used_storage', models.BigIntegerField(default=0, help_text='Currently used storage in bytes')),
                ('max_files', models.IntegerField(default=1000)),
                ('file_count', models.IntegerField(default=0)),
                ('last_calculated', models.DateTimeField(auto_now=True)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='storage_quota', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name_plural': 'Storage Quotas',
            },
        ),
        migrations.CreateModel(
            name='UserFile',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('file', models.FileField(upload_to=files.models.user_upload_path)),
                ('original_filename', models.CharField(max_length=255)),
                ('file_size', models.BigIntegerField(help_text='File size in bytes')),
                ('mime_type', models.CharField(max_length=100)),
                ('category', models.CharField(choices=[('receipt', 'Receipt'), ('document', 'Document'), ('image', 'Image'), ('audio', 'Audio'), ('video', 'Video'), ('pdf', 'PDF'), ('other', 'Other')], default='other', max_length=50)),
                ('source', models.CharField(choices=[('user_upload', 'User Upload'), ('tool_generated', 'Tool Generated'), ('tool_downloaded', 'Tool Downloaded')], default='user_upload', max_length=50)),
                ('tool_name', models.CharField(blank=True, help_text='Tool that generated/downloaded this file', max_length=100, null=True)),
                ('tool_execution_id', models.UUIDField(blank=True, help_text='Reference to ToolExecution', null=True)),
                ('conversation_id', models.UUIDField(blank=True, help_text='Associated conversation', null=True)),
                ('checkin_id', models.UUIDField(blank=True, help_text='Associated check-in', null=True)),
                ('description', models.TextField(blank=True)),
                ('tags', models.JSONField(blank=True, default=list)),
                ('metadata', models.JSONField(blank=True, default=dict, help_text='Additional metadata (OCR text, music info, etc.)')),
                ('is_temporary', models.BooleanField(default=False, help_text='Temporary files are auto-deleted after 24h')),
                ('is_processed', models.BooleanField(default=False, help_text='Whether file has been processed by tools')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('expires_at', models.DateTimeField(blank=True, help_text='Auto-delete after this time', null=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='files', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='FileShare',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('share_token', models.CharField(db_index=True, max_length=64, unique=True)),
                ('is_public', models.BooleanField(default=False, help_text='Public link accessible without auth')),
                ('max_downloads', models.IntegerField(blank=True, help_text='Maximum number of downloads allowed', null=True)),
                ('download_count', models.IntegerField(default=0)),
                ('expires_at', models.DateTimeField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('last_accessed', models.DateTimeField(blank=True, null=True)),
                ('shared_with', models.ForeignKey(blank=True, help_text='Specific user to share with', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='shared_files', to=settings.AUTH_USER_MODEL)),
                ('file', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='shares', to='files.userfile')),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.AddIndex(
            model_name='userfile',
            index=models.Index(fields=['user', 'category'], name='files_userf_user_id_1a2870_idx'),
        ),
        migrations.AddIndex(
            model_name='userfile',
            index=models.Index(fields=['user', 'source'], name='files_userf_user_id_122b94_idx'),
        ),
        migrations.AddIndex(
            model_name='userfile',
            index=models.Index(fields=['tool_name'], name='files_userf_tool_na_641fb3_idx'),
        ),
        migrations.AddIndex(
            model_name='userfile',
            index=models.Index(fields=['is_temporary', 'expires_at'], name='files_userf_is_temp_b87526_idx'),
        ),
    ]
